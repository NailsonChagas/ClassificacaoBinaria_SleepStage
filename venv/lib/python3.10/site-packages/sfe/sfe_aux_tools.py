import numpy as np

#Exponent of next higher power of 2
def nextpow2(x):
    return np.ceil(np.log2(x))


# maximum difference between two sequences
def max_dist(x_i, x_j):
    return max([abs(a - b) for a, b in zip(x_i, x_j)])

# cross-correlation between two time series, considering the time-shift m
def cross_correlation(ts1, ts2, m):
    if m < 0:
        return cross_correlation(ts1, ts2, -m)
    else:
        return np.sum([ts1[i + m] * ts2[i] for i in range(len(ts1 - m))])


# get frequency grid associated with a given fft
def getfgrid(fs, nfft, fpassMin = None, fpassMax = None):
    df = fs / nfft
    fr = np.arange(0, fs, df)

    if fpassMin != None:
        fr = fr[fr >= fpassMin]

    if fpassMax != None:
        fr = fr[fr <= fpassMax]

    return fr
    #return fr[0 : nfft]
    #fr = fr[fr >= fpass[0]]

# freq_rage = [f_min, f_max]
def spectrum_filter(ps, fs, freq_range):
    min_p = np.ceil(freq_range[0] * len(ps) / fs)
    max_p = np.floor(freq_range[1] * len(ps) / fs)

    return ps[int(min_p) : int(max_p)]
